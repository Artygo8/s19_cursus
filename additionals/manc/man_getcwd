getcwd -- get working directory pathname

#include <unistd.h>

char *		getcwd(char *buf, sizet size);


DESCRIPTION
	The getcwd() function copies the absolute pathname of the current working
	directory into the memory referenced by buf and returns a pointer to buf.
	The size argument is the size, in bytes, of the array referenced by buf.

	If buf is NULL, space is allocated as necessary to store the pathname.
	This space may later be free(3)'d.

	These routines have traditionally been used by programs to save the name
	of a working directory for the purpose of returning to it.  A much faster
	and less error-prone method of accomplishing this is to open the current
	directory (`.') and use the fchdir(2) function to return.

RETURN VALUES
	Upon successful completion, a pointer to the pathname is returned.  Oth-
	erwise a NULL pointer is returned and the global variable errno is set to
	indicate the error.  In addition, getwd() copies the error message asso-
	ciated with errno into the memory referenced by buf.


ERRORS
The getcwd() function will fail if:

	[EACCES]	Read or search permission was denied for a component of the
				pathname.

	[EINVAL]	The size argument is zero.

	[ENOENT]	A component of the pathname no longer exists.

	[ENOMEM]	Insufficient memory is available.

	[ERANGE]	The size argument is greater than zero but smaller than the
				length of the pathname plus 1.

RELATED
	chdir(2), fchdir(2), malloc(3), strerror(3)

BUGS
	The getwd() function does not do sufficient error checking and is not
	able to return very long, but valid, paths.  It is provided for compatibility.
