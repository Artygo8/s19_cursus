opendir, readdir, closedir -- directory operations

#include <dirent.h>

DIR				*opendir(const char *filename);
struct dirent	*readdir(DIR *dirp);
int				closedir(DIR *dirp);


DESCRIPTION
	The opendir() function opens the directory named by filename, associates
	a directory stream with it and returns a pointer to be used to identify
	the directory stream in subsequent operations.  The pointer NULL is
	returned if filename cannot be accessed, or if it cannot malloc(3) enough
	memory to hold the whole thing, and sets the global variable errno to
	indicate the error.

	The readdir() function returns a pointer to the next directory entry.  It
	returns NULL upon reaching the end of the directory or on error.  In the
	event of an error, errno may be set to any of the values documented for
	the getdirentries(2) system call.

	The closedir() function closes the named directory stream and frees the
	structure associated with the dirp pointer, returning 0 on success.  On
	failure, -1 is returned and the global variable errno is set to indicate
	the error.

	Sample code which searches a directory for entry ``name'' is:

		dirp = opendir(".");
		if (dirp == NULL)
			return (ERROR);
		len = strlen(name);
		while ((dp = readdir(dirp)) != NULL)
		{
			if (dp->dnamlen == len && strcmp(dp->dname, name) == 0)
			{
				(void)closedir(dirp);
				return (FOUND);
			}
		}
		(void)closedir(dirp);
		return (NOTFOUND);


RELATED
	close(2), lseek(2), open(2), read(2), dir(5)
