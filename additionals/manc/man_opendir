opendir, fdopendir, readdir, readdirr, telldir, seekdir, rewinddir,
closedir, dirfd -- directory operations

#include <dirent.h>

DIR				*opendir(const char *filename);
DIR				*fdopendir(int fd);
struct dirent	*readdir(DIR *dirp);
int				readdirr(DIR *dirp, struct dirent *entry, struct dirent **res);
long			telldir(DIR *dirp);
void			seekdir(DIR *dirp, long loc);
void			rewinddir(DIR *dirp);
int				closedir(DIR *dirp);
int				dirfd(DIR *dirp);


DESCRIPTION
The opendir() function opens the directory named by filename, associates
a directory stream with it and returns a pointer to be used to identify
the directory stream in subsequent operations.  The pointer NULL is
returned if filename cannot be accessed, or if it cannot malloc(3) enough
memory to hold the whole thing, and sets the global variable errno to
indicate the error.

The fdopendir() function is equivalent to the opendir() function except
that the directory is specified by a file descriptor fd rather than by a
name.

Upon successful return from fdopendir(), the file descriptor is under the
control of the system, and if any attempt is made to close the file
descriptor, or to modify the state of the associated description other
than by means of closedir(), readdir(), readdirr(), or rewinddir(), the
behavior is undefined.  Upon calling closedir() the file descriptor is
closed.  The FDCLOEXEC flag is set on the file descriptor by a success-
ful call to fdopendir().

The readdir() function returns a pointer to the next directory entry.  It
returns NULL upon reaching the end of the directory or on error.  In the
event of an error, errno may be set to any of the values documented for
the getdirentries(2) system call.

The readdirr() function provides the same functionality as readdir(),
but the caller must provide a directory entry buffer to store the results
in.  If the read succeeds, result is pointed at the entry; upon reaching
the end of the directory result is set to NULL.  The readdirr() function
returns 0 on success or an error number to indicate failure.

The telldir() function returns the current location associated with the
named directory stream.  Values returned by telldir() are good only for
the lifetime of the DIR pointer, dirp, from which they are derived.  If
the directory is closed and then reopened, prior values returned by
telldir() will no longer be valid.

The seekdir() function sets the position of the next readdir() operation
on the directory stream.  The new position reverts to the one associated
with the directory stream when the telldir() operation was performed.

The rewinddir() function resets the position of the named directory
stream to the beginning of the directory.

The closedir() function closes the named directory stream and frees the
structure associated with the dirp pointer, returning 0 on success.  On
failure, -1 is returned and the global variable errno is set to indicate
the error.

The dirfd() function returns the integer file descriptor associated with
the named directory stream, see open(2).  On failure, -1 is returned and
the global variable errno is set to indicate the error.

Sample code which searches a directory for entry ``name'' is:

	dirp = opendir(".");
	if (dirp == NULL)
		return (ERROR);
	len = strlen(name);
	while ((dp = readdir(dirp)) != NULL)
	{
		if (dp->dnamlen == len && strcmp(dp->dname, name) == 0)
		{
			(void)closedir(dirp);
			return (FOUND);
		}
	}
	(void)closedir(dirp);
	return (NOTFOUND);


RELATED
close(2), lseek(2), open(2), read(2), dir(5)
